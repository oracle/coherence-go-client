# Copyright 2022, 2023 Oracle Corporation and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at
# https://oss.oracle.com/licenses/upl.

# ---------------------------------------------------------------------------
# Coherence Go Client GitHub Actions CI build Against Snapshots v23.03+
# ---------------------------------------------------------------------------
name: CI Snapshots Jakarta

on:
  workflow_dispatch:
  push:
    branches:
      - '*'
  schedule:
    # Every day at midnight
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        coherenceVersion:
          - 23.03-SNAPSHOT

#   Checkout the source, we need a depth of zero to fetch all of the history otherwise
#   the copyright check cannot work out the date of the files from Git.
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get Docker Images
      shell: bash
      run: |
        docker pull gcr.io/distroless/java17

    - name: Set up JDK 17 for Build
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'

    - name: Cache Go Modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-mods-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-mods-

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: E2E Local Tests
      env:
        COH_VERSION: ${{ matrix.coherenceVersion }}
      shell: bash
      run: |
        go get google.golang.org/grpc/cmd/protoc-gen-go-grpc
        COHERENCE_BASE_IMAGE=gcr.io/distroless/java17 INCLUDE_LONG_RUNNING=true PROFILES=,jakarta,-javax COHERENCE_VERSION=$COH_VERSION make clean generate-proto build-test-images test-e2e-standalone

    - name: E2E Local Tests SSL
      env:
        COH_VERSION: ${{ matrix.coherenceVersion }}
      shell: bash
      run: |
        echo "Running verify against $COH_VERSION"
        go get google.golang.org/grpc/cmd/protoc-gen-go-grpc
        COHERENCE_BASE_IMAGE=gcr.io/distroless/java17 SECURE=true COHERENCE_IGNORE_INVALID_CERTS=true INCLUDE_LONG_RUNNING=true \
          COHERENCE_TLS_CERTS_PATH=`pwd`/test/utils/certs/guardians-ca.crt \
          COHERENCE_TLS_CLIENT_CERT=`pwd`/test/utils/certs/star-lord.crt \
          COHERENCE_TLS_CLIENT_KEY=`pwd`/test/utils/certs/star-lord.key \
          COHERENCE_VERSION=$COH_VERSION PROFILES=,secure,jakarta,-javax make clean certs generate-proto build-test-images test-e2e-standalone

    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: test-output
        path: build/_output/test-logs
