# Copyright 2021, 2023 Oracle Corporation and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at
# https://oss.oracle.com/licenses/upl.

# ---------------------------------------------------------------------------
# Coherence Go Client GitHub Actions CI build Against Snapshots 22.06
# ---------------------------------------------------------------------------
name: CI Snapshots v22.06

on:
  workflow_dispatch:
  push:
    branches:
      - '*'
  schedule:
    # Every day at midnight
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        branch:
          - v22.06

#   Checkout the source, we need a depth of zero to fetch all of the history otherwise
#   the copyright check cannot work out the date of the files from Git.
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get Docker Images
      shell: bash
      run: |
        docker pull gcr.io/distroless/java17

    - name: Set up JDK 11 for Build
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'zulu'

    - name: Build Coherence Snapshot
      shell: bash
      env:
        COH_BRANCH: ${{ matrix.branch }}
        MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false
      run: |
        # Checkout the git repo for coherence snapshot and build
        DIR=`pwd`
        CLONE_DIR=coherence-$COH_BRANCH
        cd /tmp
        git clone https://github.com/oracle/coherence.git $CLONE_DIR
        cd $CLONE_DIR/prj
        if [ "$COH_BRANCH" != "main" ] ; then
            git checkout $COH_BRANCH
        fi
        make all
        cd $DIR

    - name: Cache Go Modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-mods-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-mods-

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Verify Coherence CLI
      env:
        COH_BRANCH: ${{ matrix.branch }}
      shell: bash
      run: |
        CLONE_DIR=coherence-$COH_BRANCH
        POM_FILE=/tmp/${CLONE_DIR}/prj/coherence-bom/pom.xml
        if [ ! -r $POM_FILE ] ; then
           POM_FILE=/tmp/${CLONE_DIR}/prj/pom.xml
        fi
        COH_VERSION=`cat ${POM_FILE} | grep '<revision>' | sed -e 's,^.*<revision>,,' -e 's,</revision>.*$,,'`

        echo "Running verify against $COH_VERSION"
        go get google.golang.org/grpc/cmd/protoc-gen-go-grpc
        COHERENCE_BASE_IMAGE=gcr.io/distroless/java17 INCLUDE_LONG_RUNNING=true COHERENCE_VERSION=$COH_VERSION PROFILES=,-jakarta,javax make clean generate-proto build-test-images test-e2e-standalone

    - name: Verify Coherence CLI SSL
      env:
        COH_BRANCH: ${{ matrix.branch }}
      shell: bash
      run: |
        CLONE_DIR=coherence-$COH_BRANCH
        POM_FILE=/tmp/${CLONE_DIR}/prj/coherence-bom/pom.xml
        if [ ! -r $POM_FILE ] ; then
           POM_FILE=/tmp/${CLONE_DIR}/prj/pom.xml
        fi
        COH_VERSION=`cat ${POM_FILE} | grep '<revision>' | sed -e 's,^.*<revision>,,' -e 's,</revision>.*$,,'`

        echo "Running verify against $COH_VERSION"
        go get google.golang.org/grpc/cmd/protoc-gen-go-grpc
        COHERENCE_BASE_IMAGE=gcr.io/distroless/java17 SECURE=true COHERENCE_IGNORE_INVALID_CERTS=true INCLUDE_LONG_RUNNING=true \
          COHERENCE_TLS_CERTS_PATH=`pwd`/test/utils/certs/guardians-ca.crt \
          COHERENCE_TLS_CLIENT_CERT=`pwd`/test/utils/certs/star-lord.crt \
          COHERENCE_TLS_CLIENT_KEY=`pwd`/test/utils/certs/star-lord.key \
          COHERENCE_VERSION=$COH_VERSION PROFILES=,secure,-jakarta,javax make clean certs generate-proto build-test-images test-e2e-standalone

    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: test-output
        path: build/_output/test-logs
