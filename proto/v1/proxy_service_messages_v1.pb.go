//
// Copyright (c) 2020, 2024, Oracle and/or its affiliates.
//
// Licensed under the Universal Permissive License v 1.0 as shown at
// https://oss.oracle.com/licenses/upl.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.19.2
// source: proxy_service_messages_v1.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A request to the Coherence gRPC proxy.
// Except for a Heartbeat, every request must have a unique id field.
type ProxyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Request:
	//
	//	*ProxyRequest_Init
	//	*ProxyRequest_Message
	//	*ProxyRequest_Heartbeat
	Request isProxyRequest_Request `protobuf_oneof:"request"`
}

func (x *ProxyRequest) Reset() {
	*x = ProxyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proxy_service_messages_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyRequest) ProtoMessage() {}

func (x *ProxyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_service_messages_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyRequest.ProtoReflect.Descriptor instead.
func (*ProxyRequest) Descriptor() ([]byte, []int) {
	return file_proxy_service_messages_v1_proto_rawDescGZIP(), []int{0}
}

func (x *ProxyRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (m *ProxyRequest) GetRequest() isProxyRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *ProxyRequest) GetInit() *InitRequest {
	if x, ok := x.GetRequest().(*ProxyRequest_Init); ok {
		return x.Init
	}
	return nil
}

func (x *ProxyRequest) GetMessage() *anypb.Any {
	if x, ok := x.GetRequest().(*ProxyRequest_Message); ok {
		return x.Message
	}
	return nil
}

func (x *ProxyRequest) GetHeartbeat() *HeartbeatMessage {
	if x, ok := x.GetRequest().(*ProxyRequest_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

type isProxyRequest_Request interface {
	isProxyRequest_Request()
}

type ProxyRequest_Init struct {
	// The initialization request, which must be the first request sent.
	Init *InitRequest `protobuf:"bytes,3,opt,name=init,proto3,oneof"`
}

type ProxyRequest_Message struct {
	// A message that is specific to a Coherence gRPC service.
	// Each service on the proxy will know what type to expect here.
	Message *anypb.Any `protobuf:"bytes,4,opt,name=message,proto3,oneof"`
}

type ProxyRequest_Heartbeat struct {
	// A periodic heartbeat message sent by the client
	Heartbeat *HeartbeatMessage `protobuf:"bytes,5,opt,name=heartbeat,proto3,oneof"`
}

func (*ProxyRequest_Init) isProxyRequest_Request() {}

func (*ProxyRequest_Message) isProxyRequest_Request() {}

func (*ProxyRequest_Heartbeat) isProxyRequest_Request() {}

// A response from a Coherence gRPC proxy.
// Except for a Heartbeat, every response will contain an id field
// that corresponds to the id of the request that the response if for.
type ProxyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The identifier of the request messages this response is for, or zero if
	// this message is non-request related, for example it is an event.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The actual response message.
	//
	// Types that are assignable to Response:
	//
	//	*ProxyResponse_Init
	//	*ProxyResponse_Message
	//	*ProxyResponse_Error
	//	*ProxyResponse_Complete
	//	*ProxyResponse_Heartbeat
	Response isProxyResponse_Response `protobuf_oneof:"response"`
}

func (x *ProxyResponse) Reset() {
	*x = ProxyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proxy_service_messages_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyResponse) ProtoMessage() {}

func (x *ProxyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_service_messages_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyResponse.ProtoReflect.Descriptor instead.
func (*ProxyResponse) Descriptor() ([]byte, []int) {
	return file_proxy_service_messages_v1_proto_rawDescGZIP(), []int{1}
}

func (x *ProxyResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (m *ProxyResponse) GetResponse() isProxyResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ProxyResponse) GetInit() *InitResponse {
	if x, ok := x.GetResponse().(*ProxyResponse_Init); ok {
		return x.Init
	}
	return nil
}

func (x *ProxyResponse) GetMessage() *anypb.Any {
	if x, ok := x.GetResponse().(*ProxyResponse_Message); ok {
		return x.Message
	}
	return nil
}

func (x *ProxyResponse) GetError() *ErrorMessage {
	if x, ok := x.GetResponse().(*ProxyResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *ProxyResponse) GetComplete() *Complete {
	if x, ok := x.GetResponse().(*ProxyResponse_Complete); ok {
		return x.Complete
	}
	return nil
}

func (x *ProxyResponse) GetHeartbeat() *HeartbeatMessage {
	if x, ok := x.GetResponse().(*ProxyResponse_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

type isProxyResponse_Response interface {
	isProxyResponse_Response()
}

type ProxyResponse_Init struct {
	// The response to the initial InitRequest.
	Init *InitResponse `protobuf:"bytes,4,opt,name=init,proto3,oneof"`
}

type ProxyResponse_Message struct {
	// A response of a type specific to a Coherence gRPC service.
	// The client that sent the corresponding request will know what
	// type of message it expects in this field.
	Message *anypb.Any `protobuf:"bytes,5,opt,name=message,proto3,oneof"`
}

type ProxyResponse_Error struct {
	// An error response to a specific request id
	Error *ErrorMessage `protobuf:"bytes,6,opt,name=error,proto3,oneof"`
}

type ProxyResponse_Complete struct {
	// A complete message is sent to indicate that a stream of messages for
	// the same request id have been completed.
	Complete *Complete `protobuf:"bytes,7,opt,name=complete,proto3,oneof"`
}

type ProxyResponse_Heartbeat struct {
	// A periodic heart beat sent by the server
	Heartbeat *HeartbeatMessage `protobuf:"bytes,8,opt,name=heartbeat,proto3,oneof"`
}

func (*ProxyResponse_Init) isProxyResponse_Response() {}

func (*ProxyResponse_Message) isProxyResponse_Response() {}

func (*ProxyResponse_Error) isProxyResponse_Response() {}

func (*ProxyResponse_Complete) isProxyResponse_Response() {}

func (*ProxyResponse_Heartbeat) isProxyResponse_Response() {}

// Initialize a connection.
type InitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The scope name to use to obtain the server resources.
	Scope string `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	// The serialization format to use.
	Format string `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
	// The protocol to use for the channel
	Protocol string `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`
	// The protocol version requested by the client
	ProtocolVersion int32 `protobuf:"varint,5,opt,name=protocolVersion,proto3" json:"protocolVersion,omitempty"`
	// The minimum protocol version supported by the client
	SupportedProtocolVersion int32 `protobuf:"varint,6,opt,name=supportedProtocolVersion,proto3" json:"supportedProtocolVersion,omitempty"`
	// The requested frequency that heartbeat messages should be sent by the server (in millis)
	Heartbeat *int64 `protobuf:"varint,7,opt,name=heartbeat,proto3,oneof" json:"heartbeat,omitempty"`
	// The optional client UUID (usually from Coherence clients that have a local Member UUID).
	ClientUuid []byte `protobuf:"bytes,8,opt,name=clientUuid,proto3,oneof" json:"clientUuid,omitempty"`
}

func (x *InitRequest) Reset() {
	*x = InitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proxy_service_messages_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitRequest) ProtoMessage() {}

func (x *InitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_service_messages_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitRequest.ProtoReflect.Descriptor instead.
func (*InitRequest) Descriptor() ([]byte, []int) {
	return file_proxy_service_messages_v1_proto_rawDescGZIP(), []int{2}
}

func (x *InitRequest) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *InitRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *InitRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *InitRequest) GetProtocolVersion() int32 {
	if x != nil {
		return x.ProtocolVersion
	}
	return 0
}

func (x *InitRequest) GetSupportedProtocolVersion() int32 {
	if x != nil {
		return x.SupportedProtocolVersion
	}
	return 0
}

func (x *InitRequest) GetHeartbeat() int64 {
	if x != nil && x.Heartbeat != nil {
		return *x.Heartbeat
	}
	return 0
}

func (x *InitRequest) GetClientUuid() []byte {
	if x != nil {
		return x.ClientUuid
	}
	return nil
}

// The response to an InitRequest
type InitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This client connection's UUID.
	Uuid []byte `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// The Coherence version of the proxy
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// The encoded version of the proxy
	EncodedVersion int32 `protobuf:"varint,3,opt,name=encodedVersion,proto3" json:"encodedVersion,omitempty"`
	// The protocol version the client should use
	ProtocolVersion int32 `protobuf:"varint,4,opt,name=protocolVersion,proto3" json:"protocolVersion,omitempty"`
	// The proxy member Id
	ProxyMemberId int32 `protobuf:"varint,5,opt,name=proxyMemberId,proto3" json:"proxyMemberId,omitempty"`
	// The proxy member UUID
	ProxyMemberUuid []byte `protobuf:"bytes,6,opt,name=proxyMemberUuid,proto3" json:"proxyMemberUuid,omitempty"`
}

func (x *InitResponse) Reset() {
	*x = InitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proxy_service_messages_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitResponse) ProtoMessage() {}

func (x *InitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_service_messages_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitResponse.ProtoReflect.Descriptor instead.
func (*InitResponse) Descriptor() ([]byte, []int) {
	return file_proxy_service_messages_v1_proto_rawDescGZIP(), []int{3}
}

func (x *InitResponse) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *InitResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *InitResponse) GetEncodedVersion() int32 {
	if x != nil {
		return x.EncodedVersion
	}
	return 0
}

func (x *InitResponse) GetProtocolVersion() int32 {
	if x != nil {
		return x.ProtocolVersion
	}
	return 0
}

func (x *InitResponse) GetProxyMemberId() int32 {
	if x != nil {
		return x.ProxyMemberId
	}
	return 0
}

func (x *InitResponse) GetProxyMemberUuid() []byte {
	if x != nil {
		return x.ProxyMemberUuid
	}
	return nil
}

var File_proxy_service_messages_v1_proto protoreflect.FileDescriptor

var file_proxy_service_messages_v1_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x12, 0x63, 0x6f, 0x68, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd9, 0x01, 0x0a, 0x0c, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x04, 0x69,
	0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x68, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x69, 0x6e,
	0x69, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x45, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x68, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xd4, 0x02, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x04, 0x69, 0x6e, 0x69, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x68, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x04, 0x69, 0x6e, 0x69, 0x74,
	0x12, 0x30, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x68, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3b, 0x0a,
	0x08, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x63, 0x6f, 0x68, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x00,
	0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x45, 0x0a, 0x09, 0x68, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x63, 0x6f, 0x68, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa2, 0x02,
	0x0a, 0x0b, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x3a, 0x0a, 0x18, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x18, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a,
	0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x00, 0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x23, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x01, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62,
	0x65, 0x61, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x22, 0xde, 0x01, 0x0a, 0x0c, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x65, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x55,
	0x75, 0x69, 0x64, 0x42, 0x5f, 0x0a, 0x2b, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c,
	0x65, 0x2e, 0x63, 0x6f, 0x68, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x76, 0x31, 0x50, 0x01, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x68, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x2d, 0x67, 0x6f, 0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proxy_service_messages_v1_proto_rawDescOnce sync.Once
	file_proxy_service_messages_v1_proto_rawDescData = file_proxy_service_messages_v1_proto_rawDesc
)

func file_proxy_service_messages_v1_proto_rawDescGZIP() []byte {
	file_proxy_service_messages_v1_proto_rawDescOnce.Do(func() {
		file_proxy_service_messages_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_proxy_service_messages_v1_proto_rawDescData)
	})
	return file_proxy_service_messages_v1_proto_rawDescData
}

var file_proxy_service_messages_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proxy_service_messages_v1_proto_goTypes = []interface{}{
	(*ProxyRequest)(nil),     // 0: coherence.proxy.v1.ProxyRequest
	(*ProxyResponse)(nil),    // 1: coherence.proxy.v1.ProxyResponse
	(*InitRequest)(nil),      // 2: coherence.proxy.v1.InitRequest
	(*InitResponse)(nil),     // 3: coherence.proxy.v1.InitResponse
	(*anypb.Any)(nil),        // 4: google.protobuf.Any
	(*HeartbeatMessage)(nil), // 5: coherence.common.v1.HeartbeatMessage
	(*ErrorMessage)(nil),     // 6: coherence.common.v1.ErrorMessage
	(*Complete)(nil),         // 7: coherence.common.v1.Complete
}
var file_proxy_service_messages_v1_proto_depIdxs = []int32{
	2, // 0: coherence.proxy.v1.ProxyRequest.init:type_name -> coherence.proxy.v1.InitRequest
	4, // 1: coherence.proxy.v1.ProxyRequest.message:type_name -> google.protobuf.Any
	5, // 2: coherence.proxy.v1.ProxyRequest.heartbeat:type_name -> coherence.common.v1.HeartbeatMessage
	3, // 3: coherence.proxy.v1.ProxyResponse.init:type_name -> coherence.proxy.v1.InitResponse
	4, // 4: coherence.proxy.v1.ProxyResponse.message:type_name -> google.protobuf.Any
	6, // 5: coherence.proxy.v1.ProxyResponse.error:type_name -> coherence.common.v1.ErrorMessage
	7, // 6: coherence.proxy.v1.ProxyResponse.complete:type_name -> coherence.common.v1.Complete
	5, // 7: coherence.proxy.v1.ProxyResponse.heartbeat:type_name -> coherence.common.v1.HeartbeatMessage
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_proxy_service_messages_v1_proto_init() }
func file_proxy_service_messages_v1_proto_init() {
	if File_proxy_service_messages_v1_proto != nil {
		return
	}
	file_common_messages_v1_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proxy_service_messages_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proxy_service_messages_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proxy_service_messages_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proxy_service_messages_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proxy_service_messages_v1_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ProxyRequest_Init)(nil),
		(*ProxyRequest_Message)(nil),
		(*ProxyRequest_Heartbeat)(nil),
	}
	file_proxy_service_messages_v1_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ProxyResponse_Init)(nil),
		(*ProxyResponse_Message)(nil),
		(*ProxyResponse_Error)(nil),
		(*ProxyResponse_Complete)(nil),
		(*ProxyResponse_Heartbeat)(nil),
	}
	file_proxy_service_messages_v1_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proxy_service_messages_v1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proxy_service_messages_v1_proto_goTypes,
		DependencyIndexes: file_proxy_service_messages_v1_proto_depIdxs,
		MessageInfos:      file_proxy_service_messages_v1_proto_msgTypes,
	}.Build()
	File_proxy_service_messages_v1_proto = out.File
	file_proxy_service_messages_v1_proto_rawDesc = nil
	file_proxy_service_messages_v1_proto_goTypes = nil
	file_proxy_service_messages_v1_proto_depIdxs = nil
}
